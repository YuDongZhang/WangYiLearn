#include <iostream>
using namespace std;

/*


*/

class A{
public:
    static int a;
    int b=2;
    static void print();
};

int A::a=3;

void A::print(){
    cout<<a<<"/"<<endl;
};

int main(int argc, const char * argv[]) {
    cout<<A::a<<"/"<<endl;
    A::print();
    
    return 0;
}

/*

C/C++中static关键字作用
下面介绍一下C和C++的static关键字的区别
C中static的作用

1 静态全局变量

在全局变量前加static就是静态全局变量
静态全局变量默认初始化为0，知道程序结束才销毁
静态全局变量在该文件内可见，在其他文件不可见（普通的全局变量可以被其他文件可见）

局部静态变量

局部变量前加上static就是静态局部变量
静态局部变量只在首次执行到声明处初始化一次，之后再次执行到该语句不在执行初始化，如没有初始化则默认初始化为0；直到程序结束才销毁

静态函数

在普通函数前面加上static关键字就是静态函数
只能在本文件内使用
C++中的static 与java的static有些类似

静态数据成员

在类内的成员变量加上static关键字就是，静态成员函数
无论对少个对象，只存在一份拷贝，该静态成员被所有该类的对象共享
静态成员函数只能在类中声明，不能再类中初始化，只能在类外初始化
静态成员初始化的基本形式为， <类型名> <类名>::<变量名> = <值>
静态成员函数可以直接用类名加作用域运算符（::）调用 <类名>::<变量名>

静态成员函数

在普通成员函数加上static关键字,即为静态成员函数
在类外定义静态成员函数时，不需要加static ，只要在类中声明时加上即可
静态成员函数只能访问静态数据成员和静态成员函数，普通成员函数可以访问静态成员函数和静态成员数据
可以使用<类名>::<函数名> 访问，也可以使用对象(./->)访问

作者：renxhui
链接：https://juejin.cn/post/6844904160031145992
来源：稀土掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。


*/